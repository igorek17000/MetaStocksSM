/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaStocksCompany,
  MetaStocksCompanyInterface,
} from "../MetaStocksCompany";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "createMetaStocksCompany",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b62000152565b6200002e60ff62000031565b50565b60008054610100900460ff1615620000ca578160ff1660011480156200006a575062000068306200014360201b62000aca1760201c565b155b620000c25760405162461bcd60e51b815260206004820152602e602482015260008051602062001f7683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001295760405162461bcd60e51b815260206004820152602e602482015260008051602062001f7683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000b9565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b611e1480620001626000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063b88d4fde1161007c578063b88d4fde146102a8578063bc197c81146102bb578063c87b56dd146102f3578063e985e9c514610306578063f23a6e6114610319578063f2fde38b1461033857600080fd5b8063715018a61461026d5780638129fc1c146102755780638456cb591461027d5780638da5cb5b1461028557806395d89b411461028d578063a22cb4651461029557600080fd5b80633f4ba83a116101155780633f4ba83a1461020e57806340d097c31461021657806342842e0e146102295780635c975abb1461023c5780636352211e1461024757806370a082311461025a57600080fd5b806301ffc9a71461015d5780630431e5981461018557806306fdde03146101a6578063081812fc146101bb578063095ea7b3146101e657806323b872dd146101fb575b600080fd5b61017061016b36600461167e565b61034b565b60405190151581526020015b60405180910390f35b6101986101933660046116b2565b61035c565b60405190815260200161017c565b6101ae610382565b60405161017c9190611725565b6101ce6101c9366004611738565b610414565b6040516001600160a01b03909116815260200161017c565b6101f96101f4366004611751565b6104a1565b005b6101f961020936600461177b565b6105b1565b6101f96105e2565b6101f96102243660046116b2565b61061b565b6101f961023736600461177b565b610673565b60975460ff16610170565b6101ce610255366004611738565b61068e565b6101986102683660046116b2565b610705565b6101f961078c565b6101f96107c5565b6101f961088f565b6101ce6108c6565b6101ae6108d5565b6101f96102a33660046117b7565b6108e4565b6101f96102b63660046118a8565b6108ef565b6102da6102c936600461198e565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161017c565b6101ae610301366004611738565b610927565b610170610314366004611a37565b6109ff565b6102da610327366004611a6a565b63f23a6e6160e01b95945050505050565b6101f96103463660046116b2565b610a2d565b600061035682610ad9565b92915050565b60008061036860fb5490565b905061037860fb80546001019055565b6103568382610b0e565b60606065805461039190611ace565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd90611ace565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050505050905090565b600061041f82610b28565b6104855760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006104ac8261068e565b9050806001600160a01b0316836001600160a01b0316036105195760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161047c565b336001600160a01b0382161480610535575061053581336109ff565b6105a25760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161047c565b6105ac8383610b45565b505050565b6105bb3382610bb3565b6105d75760405162461bcd60e51b815260040161047c90611b08565b6105ac838383610c7d565b336105eb6108c6565b6001600160a01b0316146106115760405162461bcd60e51b815260040161047c90611b59565b610619610e24565b565b336106246108c6565b6001600160a01b03161461064a5760405162461bcd60e51b815260040161047c90611b59565b600061065560fb5490565b905061066560fb80546001019055565b61066f8282610b0e565b5050565b6105ac838383604051806020016040528060008152506108ef565b6000818152606760205260408120546001600160a01b0316806103565760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161047c565b60006001600160a01b0382166107705760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161047c565b506001600160a01b031660009081526068602052604090205490565b336107956108c6565b6001600160a01b0316146107bb5760405162461bcd60e51b815260040161047c90611b59565b6106196000610eb7565b60006107d16001610f09565b905080156107e9576000805461ff0019166101001790555b6108366040518060400160405280601081526020016f4d65746153746f636b436f6d70616e7960801b815250604051806040016040528060038152602001624d534360e81b815250610f9d565b61083e610fce565b610846610ffd565b801561088c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b336108986108c6565b6001600160a01b0316146108be5760405162461bcd60e51b815260040161047c90611b59565b61061961102c565b60c9546001600160a01b031690565b60606066805461039190611ace565b61066f338383611084565b6108f93383610bb3565b6109155760405162461bcd60e51b815260040161047c90611b08565b6109218484848461114e565b50505050565b606061093282610b28565b6109965760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161047c565b60006109ad60408051602081019091526000815290565b905060008151116109cd57604051806020016040528060008152506109f8565b806109d784611181565b6040516020016109e8929190611b8e565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b33610a366108c6565b6001600160a01b031614610a5c5760405162461bcd60e51b815260040161047c90611b59565b6001600160a01b038116610ac15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047c565b61088c81610eb7565b6001600160a01b03163b151590565b60006001600160e01b03198216630271189760e51b148061035657506301ffc9a760e01b6001600160e01b0319831614610356565b61066f828260405180602001604052806000815250611281565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b7a8261068e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610bbe82610b28565b610c1f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161047c565b6000610c2a8361068e565b9050806001600160a01b0316846001600160a01b03161480610c515750610c5181856109ff565b80610c755750836001600160a01b0316610c6a84610414565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c908261068e565b6001600160a01b031614610cf45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161047c565b6001600160a01b038216610d565760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161047c565b610d618383836112b4565b610d6c600082610b45565b6001600160a01b0383166000908152606860205260408120805460019290610d95908490611bd3565b90915550506001600160a01b0382166000908152606860205260408120805460019290610dc3908490611bea565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60975460ff16610e6d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161047c565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610f57578160ff166001148015610f335750610f3130610aca565b155b610f4f5760405162461bcd60e51b815260040161047c90611c02565b506000919050565b60005460ff808416911610610f7e5760405162461bcd60e51b815260040161047c90611c02565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610fc45760405162461bcd60e51b815260040161047c90611c50565b61066f82826112d7565b600054610100900460ff16610ff55760405162461bcd60e51b815260040161047c90611c50565b610619611325565b600054610100900460ff166110245760405162461bcd60e51b815260040161047c90611c50565b610619611358565b60975460ff161561104f5760405162461bcd60e51b815260040161047c90611c9b565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e9a3390565b816001600160a01b0316836001600160a01b0316036110e15760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161047c565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611159848484610c7d565b61116584848484611388565b6109215760405162461bcd60e51b815260040161047c90611cc5565b6060816000036111a85750506040805180820190915260018152600360fc1b602082015290565b8160005b81156111d257806111bc81611d17565b91506111cb9050600a83611d46565b91506111ac565b6000816001600160401b038111156111ec576111ec6117f3565b6040519080825280601f01601f191660200182016040528015611216576020820181803683370190505b5090505b8415610c755761122b600183611bd3565b9150611238600a86611d5a565b611243906030611bea565b60f81b81838151811061125857611258611d6e565b60200101906001600160f81b031916908160001a90535061127a600a86611d46565b945061121a565b61128b8383611490565b6112986000848484611388565b6105ac5760405162461bcd60e51b815260040161047c90611cc5565b60975460ff16156105ac5760405162461bcd60e51b815260040161047c90611c9b565b600054610100900460ff166112fe5760405162461bcd60e51b815260040161047c90611c50565b81516113119060659060208501906115cf565b5080516105ac9060669060208401906115cf565b600054610100900460ff1661134c5760405162461bcd60e51b815260040161047c90611c50565b6097805460ff19169055565b600054610100900460ff1661137f5760405162461bcd60e51b815260040161047c90611c50565b61061933610eb7565b600061139c846001600160a01b0316610aca565b1561148557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113d3903390899088908890600401611d84565b6020604051808303816000875af192505050801561140e575060408051601f3d908101601f1916820190925261140b91810190611dc1565b60015b61146b573d80801561143c576040519150601f19603f3d011682016040523d82523d6000602084013e611441565b606091505b5080516000036114635760405162461bcd60e51b815260040161047c90611cc5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c75565b506001949350505050565b6001600160a01b0382166114e65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161047c565b6114ef81610b28565b1561153c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047c565b611548600083836112b4565b6001600160a01b0382166000908152606860205260408120805460019290611571908490611bea565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546115db90611ace565b90600052602060002090601f0160209004810192826115fd5760008555611643565b82601f1061161657805160ff1916838001178555611643565b82800160010185558215611643579182015b82811115611643578251825591602001919060010190611628565b5061164f929150611653565b5090565b5b8082111561164f5760008155600101611654565b6001600160e01b03198116811461088c57600080fd5b60006020828403121561169057600080fd5b81356109f881611668565b80356001600160a01b0381168114610f9857600080fd5b6000602082840312156116c457600080fd5b6109f88261169b565b60005b838110156116e85781810151838201526020016116d0565b838111156109215750506000910152565b600081518084526117118160208601602086016116cd565b601f01601f19169290920160200192915050565b6020815260006109f860208301846116f9565b60006020828403121561174a57600080fd5b5035919050565b6000806040838503121561176457600080fd5b61176d8361169b565b946020939093013593505050565b60008060006060848603121561179057600080fd5b6117998461169b565b92506117a76020850161169b565b9150604084013590509250925092565b600080604083850312156117ca57600080fd5b6117d38361169b565b9150602083013580151581146117e857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611831576118316117f3565b604052919050565b600082601f83011261184a57600080fd5b81356001600160401b03811115611863576118636117f3565b611876601f8201601f1916602001611809565b81815284602083860101111561188b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156118be57600080fd5b6118c78561169b565b93506118d56020860161169b565b92506040850135915060608501356001600160401b038111156118f757600080fd5b61190387828801611839565b91505092959194509250565b600082601f83011261192057600080fd5b813560206001600160401b0382111561193b5761193b6117f3565b8160051b61194a828201611809565b928352848101820192828101908785111561196457600080fd5b83870192505b848310156119835782358252918301919083019061196a565b979650505050505050565b600080600080600060a086880312156119a657600080fd5b6119af8661169b565b94506119bd6020870161169b565b935060408601356001600160401b03808211156119d957600080fd5b6119e589838a0161190f565b945060608801359150808211156119fb57600080fd5b611a0789838a0161190f565b93506080880135915080821115611a1d57600080fd5b50611a2a88828901611839565b9150509295509295909350565b60008060408385031215611a4a57600080fd5b611a538361169b565b9150611a616020840161169b565b90509250929050565b600080600080600060a08688031215611a8257600080fd5b611a8b8661169b565b9450611a996020870161169b565b9350604086013592506060860135915060808601356001600160401b03811115611ac257600080fd5b611a2a88828901611839565b600181811c90821680611ae257607f821691505b602082108103611b0257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351611ba08184602088016116cd565b835190830190611bb48183602088016116cd565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611be557611be5611bbd565b500390565b60008219821115611bfd57611bfd611bbd565b500190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611d2957611d29611bbd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611d5557611d55611d30565b500490565b600082611d6957611d69611d30565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611db7908301846116f9565b9695505050505050565b600060208284031215611dd357600080fd5b81516109f88161166856fea2646970667358221220c2083771704bd930d18ded9f04a219e3fdaf8b872e581c5cb86f523e433346d364736f6c634300080e0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

export class MetaStocksCompany__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaStocksCompany> {
    return super.deploy(overrides || {}) as Promise<MetaStocksCompany>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaStocksCompany {
    return super.attach(address) as MetaStocksCompany;
  }
  connect(signer: Signer): MetaStocksCompany__factory {
    return super.connect(signer) as MetaStocksCompany__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaStocksCompanyInterface {
    return new utils.Interface(_abi) as MetaStocksCompanyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaStocksCompany {
    return new Contract(address, _abi, signerOrProvider) as MetaStocksCompany;
  }
}
