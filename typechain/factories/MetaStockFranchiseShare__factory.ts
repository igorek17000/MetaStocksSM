/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaStockFranchiseShare,
  MetaStockFranchiseShareInterface,
} from "../MetaStockFranchiseShare";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "franchiseAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintFranchiseShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "franchiseAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintFranchiseShareBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b62000152565b6200002e60ff62000031565b50565b60008054610100900460ff1615620000ca578160ff1660011480156200006a575062000068306200014360201b62000a151760201c565b155b620000c25760405162461bcd60e51b815260206004820152602e60248201526000805160206200285c83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001295760405162461bcd60e51b815260206004820152602e60248201526000805160206200285c83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000b9565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b6126fa80620001626000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c8063715018a6116100b8578063bd85b0391161007c578063bd85b0391461029e578063e985e9c5146102bf578063ef480565146102fb578063f242432a1461030e578063f2fde38b14610321578063f5298aca1461033457600080fd5b8063715018a6146102535780638129fc1c1461025b5780638456cb59146102635780638da5cb5b1461026b578063a22cb4651461028b57600080fd5b80633df8fdc31161010a5780633df8fdc3146101d75780633f4ba83a146101ea5780634e1273f4146101f25780634f558e79146102125780635c975abb146102355780636b20c4541461024057600080fd5b8062fdd58e1461014657806301ffc9a71461016c57806302fe53051461018f5780630e89341c146101a45780632eb2c2d6146101c4575b600080fd5b610159610154366004611a71565b610347565b6040519081526020015b60405180910390f35b61017f61017a366004611ab1565b6103e0565b6040519015158152602001610163565b6101a261019d366004611b74565b610432565b005b6101b76101b2366004611bc4565b61046d565b6040516101639190611c2a565b6101a26101d2366004611cf1565b610501565b6101a26101e5366004611d9a565b610598565b6101a26105d9565b610205610200366004611e32565b610612565b6040516101639190611f37565b61017f610220366004611bc4565b600090815261012d6020526040902054151590565b60c95460ff1661017f565b6101a261024e366004611f4a565b61073b565b6101a2610783565b6101a26107bc565b6101a2610860565b610273610897565b6040516001600160a01b039091168152602001610163565b6101a2610299366004611fbd565b6108a6565b6101596102ac366004611bc4565b600090815261012d602052604090205490565b61017f6102cd366004611ff9565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101a261030936600461202c565b6108b5565b6101a261031c366004612080565b6108f0565b6101a261032f3660046120e4565b610935565b6101a26103423660046120ff565b6109d2565b60006001600160a01b0383166103b85760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061041157506001600160e01b031982166303a24d0760e21b145b8061042c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3361043b610897565b6001600160a01b0316146104615760405162461bcd60e51b81526004016103af90612132565b61046a81610a24565b50565b60606067805461047c90612167565b80601f01602080910402602001604051908101604052809291908181526020018280546104a890612167565b80156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b50505050509050919050565b6001600160a01b03851633148061051d575061051d85336102cd565b6105845760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103af565b6105918585858585610a37565b5050505050565b336105a1610897565b6001600160a01b0316146105c75760405162461bcd60e51b81526004016103af90612132565b6105d384848484610bd2565b50505050565b336105e2610897565b6001600160a01b0316146106085760405162461bcd60e51b81526004016103af90612132565b610610610d1b565b565b606081518351146106775760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103af565b600083516001600160401b0381111561069257610692611ad5565b6040519080825280602002602001820160405280156106bb578160200160208202803683370190505b50905060005b8451811015610733576107068582815181106106df576106df6121a1565b60200260200101518583815181106106f9576106f96121a1565b6020026020010151610347565b828281518110610718576107186121a1565b602090810291909101015261072c816121cd565b90506106c1565b509392505050565b6001600160a01b038316331480610757575061075783336102cd565b6107735760405162461bcd60e51b81526004016103af906121e6565b61077e838383610dae565b505050565b3361078c610897565b6001600160a01b0316146107b25760405162461bcd60e51b81526004016103af90612132565b6106106000610f3b565b60006107c86001610f8d565b905080156107e0576000805461ff0019166101001790555b6107f860405180602001604052806000815250611021565b610800611051565b610808611080565b6108106110af565b6108186110af565b801561046a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b33610869610897565b6001600160a01b03161461088f5760405162461bcd60e51b81526004016103af90612132565b6106106110d6565b6097546001600160a01b031690565b6108b133838361112e565b5050565b336108be610897565b6001600160a01b0316146108e45760405162461bcd60e51b81526004016103af90612132565b6105d38484848461120e565b6001600160a01b03851633148061090c575061090c85336102cd565b6109285760405162461bcd60e51b81526004016103af906121e6565b61059185858585856112e7565b3361093e610897565b6001600160a01b0316146109645760405162461bcd60e51b81526004016103af90612132565b6001600160a01b0381166109c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103af565b61046a81610f3b565b6001600160a01b0383163314806109ee57506109ee83336102cd565b610a0a5760405162461bcd60e51b81526004016103af906121e6565b61077e838383611411565b6001600160a01b03163b151590565b80516108b19060679060208401906119c1565b8151835114610a585760405162461bcd60e51b81526004016103af9061222f565b6001600160a01b038416610a7e5760405162461bcd60e51b81526004016103af90612277565b33610a8d81878787878761151b565b60005b8451811015610b76576000858281518110610aad57610aad6121a1565b602002602001015190506000858381518110610acb57610acb6121a1565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610b1c5760405162461bcd60e51b81526004016103af906122bc565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610b5b908490612306565b9250508190555050505080610b6f906121cd565b9050610a90565b50846001600160a01b0316866001600160a01b0316826001600160a01b03166000805160206126858339815191528787604051610bb492919061231e565b60405180910390a4610bca81878787878761154c565b505050505050565b6001600160a01b038416610bf85760405162461bcd60e51b81526004016103af9061234c565b8151835114610c195760405162461bcd60e51b81526004016103af9061222f565b33610c298160008787878761151b565b60005b8451811015610cc557838181518110610c4757610c476121a1565b602002602001015160656000878481518110610c6557610c656121a1565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610cad9190612306565b90915550819050610cbd816121cd565b915050610c2c565b50846001600160a01b031660006001600160a01b0316826001600160a01b03166000805160206126858339815191528787604051610d0492919061231e565b60405180910390a46105918160008787878761154c565b60c95460ff16610d645760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103af565b60c9805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610dd45760405162461bcd60e51b81526004016103af9061238d565b8051825114610df55760405162461bcd60e51b81526004016103af9061222f565b6000339050610e188185600086866040518060200160405280600081525061151b565b60005b8351811015610ee0576000848281518110610e3857610e386121a1565b602002602001015190506000848381518110610e5657610e566121a1565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015610ea75760405162461bcd60e51b81526004016103af906123d0565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580610ed8816121cd565b915050610e1b565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03166000805160206126858339815191528686604051610f1f92919061231e565b60405180910390a46040805160208101909152600090526105d3565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610fdb578160ff166001148015610fb75750610fb530610a15565b155b610fd35760405162461bcd60e51b81526004016103af90612414565b506000919050565b60005460ff8084169116106110025760405162461bcd60e51b81526004016103af90612414565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166110485760405162461bcd60e51b81526004016103af90612462565b61046a816116ae565b600054610100900460ff166110785760405162461bcd60e51b81526004016103af90612462565b6106106116d5565b600054610100900460ff166110a75760405162461bcd60e51b81526004016103af90612462565b610610611705565b600054610100900460ff166106105760405162461bcd60e51b81526004016103af90612462565b60c95460ff16156110f95760405162461bcd60e51b81526004016103af906124ad565b60c9805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d913390565b816001600160a01b0316836001600160a01b0316036111a15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103af565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166112345760405162461bcd60e51b81526004016103af9061234c565b33600061124085611738565b9050600061124d85611738565b905061125e8360008985858961151b565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290611290908490612306565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716916000805160206126a5833981519152910160405180910390a46112de83600089898989611783565b50505050505050565b6001600160a01b03841661130d5760405162461bcd60e51b81526004016103af90612277565b33600061131985611738565b9050600061132685611738565b905061133683898985858961151b565b60008681526065602090815260408083206001600160a01b038c168452909152902054858110156113795760405162461bcd60e51b81526004016103af906122bc565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906113b8908490612306565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816916000805160206126a5833981519152910160405180910390a4611406848a8a8a8a8a611783565b505050505050505050565b6001600160a01b0383166114375760405162461bcd60e51b81526004016103af9061238d565b33600061144384611738565b9050600061145084611738565b90506114708387600085856040518060200160405280600081525061151b565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156114b35760405162461bcd60e51b81526004016103af906123d0565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816916000805160206126a5833981519152910160405180910390a46040805160208101909152600090526112de565b60c95460ff161561153e5760405162461bcd60e51b81526004016103af906124ad565b610bca868686868686611845565b61155e846001600160a01b0316610a15565b15610bca5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061159790899089908890889088906004016124d7565b6020604051808303816000875af19250505080156115d2575060408051601f3d908101601f191682019092526115cf91810190612535565b60015b61167e576115de612552565b806308c379a00361161757506115f261256e565b806115fd5750611619565b8060405162461bcd60e51b81526004016103af9190611c2a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103af565b6001600160e01b0319811663bc197c8160e01b146112de5760405162461bcd60e51b81526004016103af906125f7565b600054610100900460ff166104615760405162461bcd60e51b81526004016103af90612462565b600054610100900460ff166116fc5760405162461bcd60e51b81526004016103af90612462565b61061033610f3b565b600054610100900460ff1661172c5760405162461bcd60e51b81526004016103af90612462565b60c9805460ff19169055565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611772576117726121a1565b602090810291909101015292915050565b611795846001600160a01b0316610a15565b15610bca5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906117ce908990899088908890889060040161263f565b6020604051808303816000875af1925050508015611809575060408051601f3d908101601f1916820190925261180691810190612535565b60015b611815576115de612552565b6001600160e01b0319811663f23a6e6160e01b146112de5760405162461bcd60e51b81526004016103af906125f7565b6001600160a01b0385166118cd5760005b83518110156118cb57828181518110611871576118716121a1565b602002602001015161012d6000868481518110611890576118906121a1565b6020026020010151815260200190815260200160002060008282546118b59190612306565b909155506118c49050816121cd565b9050611856565b505b6001600160a01b038416610bca5760005b83518110156112de5760008482815181106118fb576118fb6121a1565b602002602001015190506000848381518110611919576119196121a1565b60200260200101519050600061012d60008481526020019081526020016000205490508181101561199d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016103af565b600092835261012d6020526040909220910390556119ba816121cd565b90506118de565b8280546119cd90612167565b90600052602060002090601f0160209004810192826119ef5760008555611a35565b82601f10611a0857805160ff1916838001178555611a35565b82800160010185558215611a35579182015b82811115611a35578251825591602001919060010190611a1a565b50611a41929150611a45565b5090565b5b80821115611a415760008155600101611a46565b80356001600160a01b038116811461101c57600080fd5b60008060408385031215611a8457600080fd5b611a8d83611a5a565b946020939093013593505050565b6001600160e01b03198116811461046a57600080fd5b600060208284031215611ac357600080fd5b8135611ace81611a9b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715611b1057611b10611ad5565b6040525050565b60006001600160401b03831115611b3057611b30611ad5565b604051611b47601f8501601f191660200182611aeb565b809150838152848484011115611b5c57600080fd5b83836020830137600060208583010152509392505050565b600060208284031215611b8657600080fd5b81356001600160401b03811115611b9c57600080fd5b8201601f81018413611bad57600080fd5b611bbc84823560208401611b17565b949350505050565b600060208284031215611bd657600080fd5b5035919050565b6000815180845260005b81811015611c0357602081850181015186830182015201611be7565b81811115611c15576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611ace6020830184611bdd565b60006001600160401b03821115611c5657611c56611ad5565b5060051b60200190565b600082601f830112611c7157600080fd5b81356020611c7e82611c3d565b604051611c8b8282611aeb565b83815260059390931b8501820192828101915086841115611cab57600080fd5b8286015b84811015611cc65780358352918301918301611caf565b509695505050505050565b600082601f830112611ce257600080fd5b611ace83833560208501611b17565b600080600080600060a08688031215611d0957600080fd5b611d1286611a5a565b9450611d2060208701611a5a565b935060408601356001600160401b0380821115611d3c57600080fd5b611d4889838a01611c60565b94506060880135915080821115611d5e57600080fd5b611d6a89838a01611c60565b93506080880135915080821115611d8057600080fd5b50611d8d88828901611cd1565b9150509295509295909350565b60008060008060808587031215611db057600080fd5b611db985611a5a565b935060208501356001600160401b0380821115611dd557600080fd5b611de188838901611c60565b94506040870135915080821115611df757600080fd5b611e0388838901611c60565b93506060870135915080821115611e1957600080fd5b50611e2687828801611cd1565b91505092959194509250565b60008060408385031215611e4557600080fd5b82356001600160401b0380821115611e5c57600080fd5b818501915085601f830112611e7057600080fd5b81356020611e7d82611c3d565b604051611e8a8282611aeb565b83815260059390931b8501820192828101915089841115611eaa57600080fd5b948201945b83861015611ecf57611ec086611a5a565b82529482019490820190611eaf565b96505086013592505080821115611ee557600080fd5b50611ef285828601611c60565b9150509250929050565b600081518084526020808501945080840160005b83811015611f2c57815187529582019590820190600101611f10565b509495945050505050565b602081526000611ace6020830184611efc565b600080600060608486031215611f5f57600080fd5b611f6884611a5a565b925060208401356001600160401b0380821115611f8457600080fd5b611f9087838801611c60565b93506040860135915080821115611fa657600080fd5b50611fb386828701611c60565b9150509250925092565b60008060408385031215611fd057600080fd5b611fd983611a5a565b915060208301358015158114611fee57600080fd5b809150509250929050565b6000806040838503121561200c57600080fd5b61201583611a5a565b915061202360208401611a5a565b90509250929050565b6000806000806080858703121561204257600080fd5b61204b85611a5a565b9350602085013592506040850135915060608501356001600160401b0381111561207457600080fd5b611e2687828801611cd1565b600080600080600060a0868803121561209857600080fd5b6120a186611a5a565b94506120af60208701611a5a565b9350604086013592506060860135915060808601356001600160401b038111156120d857600080fd5b611d8d88828901611cd1565b6000602082840312156120f657600080fd5b611ace82611a5a565b60008060006060848603121561211457600080fd5b61211d84611a5a565b95602085013595506040909401359392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061217b57607f821691505b60208210810361219b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016121df576121df6121b7565b5060010190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115612319576123196121b7565b500190565b6040815260006123316040830185611efc565b82810360208401526123438185611efc565b95945050505050565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6001600160a01b0386811682528516602082015260a06040820181905260009061250390830186611efc565b82810360608401526125158186611efc565b905082810360808401526125298185611bdd565b98975050505050505050565b60006020828403121561254757600080fd5b8151611ace81611a9b565b600060033d111561256b5760046000803e5060005160e01c5b90565b600060443d101561257c5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156125ab57505050505090565b82850191508151818111156125c35750505050505090565b843d87010160208285010111156125dd5750505050505090565b6125ec60208286010187611aeb565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061267990830184611bdd565b97965050505050505056fe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a2646970667358221220d97a7fdb4d03620782d6f29eed0dcf623c7c9fa26730b5490f7242cb7073a61364736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

export class MetaStockFranchiseShare__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaStockFranchiseShare> {
    return super.deploy(overrides || {}) as Promise<MetaStockFranchiseShare>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaStockFranchiseShare {
    return super.attach(address) as MetaStockFranchiseShare;
  }
  connect(signer: Signer): MetaStockFranchiseShare__factory {
    return super.connect(signer) as MetaStockFranchiseShare__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaStockFranchiseShareInterface {
    return new utils.Interface(_abi) as MetaStockFranchiseShareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaStockFranchiseShare {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaStockFranchiseShare;
  }
}
