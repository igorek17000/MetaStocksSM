/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainlinkDataFeedsManager,
  ChainlinkDataFeedsManagerInterface,
} from "../ChainlinkDataFeedsManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "contract IMidasMultiNetworkRouter",
        name: "dexRouter",
        type: "address",
      },
    ],
    name: "getAmountOutUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPriceFromChainlink",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativeNetworkCurrencyInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_network",
        type: "uint256",
      },
      {
        internalType: "contract IMidasMultiNetworkRouter",
        name: "midasMultiNetworkRouter",
        type: "address",
      },
    ],
    name: "getTokensValueInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081638038061081683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610783806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806307fed6ac14610051578063669a8e341461006b578063b5acc9111461007e578063f20a7cd414610086575b600080fd5b610059610099565b60405190815260200160405180910390f35b6100596100793660046104b0565b6100b7565b610059610267565b6100596100943660046104fa565b6102e0565b60006100a3610267565b6100b2906402540be40061052a565b905090565b6000806100c2610267565b6100d1906402540be40061052a565b6040805160028082526060820183529293506000929091602083019080368337019050509050868160008151811061010b5761010b61056d565b6001600160a01b03928316602091820292909201015260405163ea706d2160e01b8152600481018790529085169063ea706d2190602401602060405180830381865afa15801561015f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101839190610583565b816001815181106101965761019661056d565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b815260009186169063d06ca61f906101d5908a9086906004016105a7565b600060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021a91908101906105fe565b90506000816001815181106102315761023161056d565b60200260200101519050670de0b6b3a76400008185610250919061052a565b61025a91906106bc565b9998505050505050505050565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d591906106fd565b509195945050505050565b6000806102eb610267565b6102fa906402540be40061052a565b604080516002808252606082018352929350600092909160208301908036833701905050905030816000815181106103345761033461056d565b60200260200101906001600160a01b031690816001600160a01b031681525050836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190610583565b816001815181106103c9576103c961056d565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b815260009186169063d06ca61f9061040890899086906004016105a7565b600060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261044d91908101906105fe565b90506000816001815181106104645761046461056d565b60200260200101519050670de0b6b3a76400008185610483919061052a565b61048d91906106bc565b979650505050505050565b6001600160a01b03811681146104ad57600080fd5b50565b600080600080608085870312156104c657600080fd5b84356104d181610498565b9350602085013592506040850135915060608501356104ef81610498565b939692955090935050565b6000806040838503121561050d57600080fd5b82359150602083013561051f81610498565b809150509250929050565b600081600019048311821515161561055257634e487b7160e01b600052601160045260246000fd5b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561059557600080fd5b81516105a081610498565b9392505050565b6000604082018483526020604081850152818551808452606086019150828701935060005b818110156105f15784516001600160a01b0316835293830193918301916001016105cc565b5090979650505050505050565b6000602080838503121561061157600080fd5b825167ffffffffffffffff8082111561062957600080fd5b818501915085601f83011261063d57600080fd5b81518181111561064f5761064f610557565b8060051b604051601f19603f8301168101818110858211171561067457610674610557565b60405291825284820192508381018501918883111561069257600080fd5b938501935b828510156106b057845184529385019392850192610697565b98975050505050505050565b6000826106d957634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff811681146106f857600080fd5b919050565b600080600080600060a0868803121561071557600080fd5b61071e866106de565b9450602086015193506040860151925060608601519150610741608087016106de565b9050929550929590935056fea2646970667358221220bd8ccb4c6941f857b0c6f0dd91e1e3527cc97078f2290e9e251c87b5ab744d1c64736f6c634300080e0033";

export class ChainlinkDataFeedsManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _priceFeedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkDataFeedsManager> {
    return super.deploy(
      _priceFeedAddress,
      overrides || {}
    ) as Promise<ChainlinkDataFeedsManager>;
  }
  getDeployTransaction(
    _priceFeedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_priceFeedAddress, overrides || {});
  }
  attach(address: string): ChainlinkDataFeedsManager {
    return super.attach(address) as ChainlinkDataFeedsManager;
  }
  connect(signer: Signer): ChainlinkDataFeedsManager__factory {
    return super.connect(signer) as ChainlinkDataFeedsManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkDataFeedsManagerInterface {
    return new utils.Interface(_abi) as ChainlinkDataFeedsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkDataFeedsManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkDataFeedsManager;
  }
}
