/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaStocksCompanyManager,
  MetaStocksCompanyManagerInterface,
} from "../MetaStocksCompanyManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ceosCompanies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createCompany",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompanyId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isCeo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "setMetaStockCompany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b031916905561024f806100306000396000f3fe60806040526004361061004a5760003560e01c80631165e6ab1461004f578063212030381461009c578063327cf664146100d7578063d6f343c514610116578063e3d1317a1461014c575b600080fd5b34801561005b57600080fd5b5061008761006a3660046101d0565b6001600160a01b0316600090815260208190526040902054151590565b60405190151581526020015b60405180910390f35b3480156100a857600080fd5b506100c96100b73660046101d0565b60006020819052908152604090205481565b604051908152602001610093565b3480156100e357600080fd5b506101146100f23660046101d0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561012257600080fd5b506100c96101313660046101d0565b6001600160a01b031660009081526020819052604090205490565b61011460015460405162863cb360e31b81523360048201526000916001600160a01b031690630431e598906024016020604051808303816000875af1158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd9190610200565b3360009081526020819052604090205550565b6000602082840312156101e257600080fd5b81356001600160a01b03811681146101f957600080fd5b9392505050565b60006020828403121561021257600080fd5b505191905056fea2646970667358221220b7cbd889598224841cfabf0a36e5b1a1444eda58101e94f8e69a24201bf9831b64736f6c634300080e0033";

export class MetaStocksCompanyManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaStocksCompanyManager> {
    return super.deploy(overrides || {}) as Promise<MetaStocksCompanyManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaStocksCompanyManager {
    return super.attach(address) as MetaStocksCompanyManager;
  }
  connect(signer: Signer): MetaStocksCompanyManager__factory {
    return super.connect(signer) as MetaStocksCompanyManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaStocksCompanyManagerInterface {
    return new utils.Interface(_abi) as MetaStocksCompanyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaStocksCompanyManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaStocksCompanyManager;
  }
}
