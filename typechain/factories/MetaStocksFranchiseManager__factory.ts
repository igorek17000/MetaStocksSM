/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaStocksFranchiseManager,
  MetaStocksFranchiseManagerInterface,
} from "../MetaStocksFranchiseManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "create",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "companyAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createMetaStocksFranchise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreateFranchisePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFranchiseDailyEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFranchiseValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaintainceFranchiseExpenses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPaymentTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnclaimedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaStocksFranchiseAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_createFranchisePrice",
        type: "uint16",
      },
    ],
    name: "setCreateFranchisePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_franchiseDailyEarnings",
        type: "uint16",
      },
    ],
    name: "setFranchiseDailyEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_maintainceFranchiseExpenses",
        type: "uint16",
      },
    ],
    name: "setMaintainceFranchiseExpenses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentTokenAddress222",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "managerId",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f79806100206000396000f3fe6080604052600436106101825760003560e01c8063893d20e8116100d7578063be154d2b11610085578063be154d2b146103fe578063c36f6e2414610422578063c4d66de814610442578063dcb98f7e146102cb578063dd62ed3e14610462578063dea182c114610482578063efc81a8c1461025a578063f2fde38b146104a057600080fd5b8063893d20e81461033e57806395d89b41146103705780639d58f3e0146101e25780639e201466146103855780639f2e747f146103a9578063a457c2d7146103be578063a9059cbb146103de57600080fd5b8063313ce56711610134578063313ce56714610271578063395093511461028d57806344716080146101e25780634cc82215146102ad5780636188389c146102cb57806370a082311461030857806382ab890a146102ad57600080fd5b806306fdde0314610187578063095ea7b3146101b257806316230257146101e257806318160ddd1461020157806323b872dd146102165780632a5bb068146102365780632c602e5b1461025c575b600080fd5b34801561019357600080fd5b5061019c6104dd565b6040516101a99190610c2e565b60405180910390f35b3480156101be57600080fd5b506101d26101cd366004610c9a565b61056f565b60405190151581526020016101a9565b3480156101ee57600080fd5b506069545b6040519081526020016101a9565b34801561020d57600080fd5b506035546101f3565b34801561022257600080fd5b506101d2610231366004610cc4565b610587565b34801561024257600080fd5b5061025a610251366004610d00565b61ffff16606855565b005b34801561026857600080fd5b506067546101f3565b34801561027d57600080fd5b50604051601281526020016101a9565b34801561029957600080fd5b506101d26102a8366004610c9a565b6105ab565b3480156102b957600080fd5b5061025a6102c8366004610d2b565b50565b3480156102d757600080fd5b5061025a6102e6366004610d44565b606a80546001600160a01b0319166001600160a01b0392909216919091179055565b34801561031457600080fd5b506101f3610323366004610d44565b6001600160a01b031660009081526033602052604090205490565b34801561034a57600080fd5b50606b546001600160a01b03165b6040516001600160a01b0390911681526020016101a9565b34801561037c57600080fd5b5061019c6105cd565b34801561039157600080fd5b5061025a6103a0366004610d00565b61ffff16606955565b3480156103b557600080fd5b506068546101f3565b3480156103ca57600080fd5b506101d26103d9366004610c9a565b6105dc565b3480156103ea57600080fd5b506101d26103f9366004610c9a565b61065c565b34801561040a57600080fd5b5061025a610419366004610d00565b61ffff16606755565b34801561042e57600080fd5b5061025a61043d366004610d75565b61066a565b34801561044e57600080fd5b5061025a61045d366004610d44565b61074d565b34801561046e57600080fd5b506101f361047d366004610e40565b610810565b34801561048e57600080fd5b50606a546001600160a01b0316610358565b3480156104ac57600080fd5b5061025a6104bb366004610d44565b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060603680546104ec90610e73565b80601f016020809104026020016040519081016040528092919081815260200182805461051890610e73565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b60003361057d81858561083b565b5060019392505050565b60003361059585828561095f565b6105a08585856109d3565b506001949350505050565b60003361057d8185856105be8383610810565b6105c89190610ead565b61083b565b6060603780546104ec90610e73565b600033816105ea8286610810565b90508381101561064f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6105a0828686840361083b565b60003361057d8185856109d3565b606b546001600160a01b031633146106c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610646565b606a546040516323b872dd60e01b81523360048201526001600160a01b0390911660248201819052678ac7230489e800006044830152906323b872dd906064016020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610ed3565b50505050565b60006107596001610ba1565b90508015610771576000805461ff0019166101001790555b606b8054336001600160a01b031991821617909155678ac7230489e80000606755670de0b6b3a764000060685567016345785d8a0000606955606a805482169055606580549091166001600160a01b038416179055801561080c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b03831661089d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610646565b6001600160a01b0382166108fe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610646565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061096b8484610810565b9050600019811461074757818110156109c65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610646565b610747848484840361083b565b6001600160a01b038316610a375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610646565b6001600160a01b038216610a995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610646565b6001600160a01b03831660009081526033602052604090205481811015610b115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610646565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610b48908490610ead565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9491815260200190565b60405180910390a3610747565b60008054610100900460ff1615610be8578160ff166001148015610bc45750303b155b610be05760405162461bcd60e51b815260040161064690610ef5565b506000919050565b60005460ff808416911610610c0f5760405162461bcd60e51b815260040161064690610ef5565b506000805460ff191660ff92909216919091179055600190565b919050565b600060208083528351808285015260005b81811015610c5b57858101830151858201604001528201610c3f565b81811115610c6d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c2957600080fd5b60008060408385031215610cad57600080fd5b610cb683610c83565b946020939093013593505050565b600080600060608486031215610cd957600080fd5b610ce284610c83565b9250610cf060208501610c83565b9150604084013590509250925092565b600060208284031215610d1257600080fd5b813561ffff81168114610d2457600080fd5b9392505050565b600060208284031215610d3d57600080fd5b5035919050565b600060208284031215610d5657600080fd5b610d2482610c83565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610d8a57600080fd5b610d9384610c83565b925060208401359150604084013567ffffffffffffffff80821115610db757600080fd5b818601915086601f830112610dcb57600080fd5b813581811115610ddd57610ddd610d5f565b604051601f8201601f19908116603f01168101908382118183101715610e0557610e05610d5f565b81604052828152896020848701011115610e1e57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060408385031215610e5357600080fd5b610e5c83610c83565b9150610e6a60208401610c83565b90509250929050565b600181811c90821680610e8757607f821691505b602082108103610ea757634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ece57634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610ee557600080fd5b81518015158114610d2457600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea264697066735822122092898919144d7cc60ef990fbabaa3708f8372cf9ca3b661cb00a17712200777264736f6c634300080e0033";

export class MetaStocksFranchiseManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaStocksFranchiseManager> {
    return super.deploy(overrides || {}) as Promise<MetaStocksFranchiseManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaStocksFranchiseManager {
    return super.attach(address) as MetaStocksFranchiseManager;
  }
  connect(signer: Signer): MetaStocksFranchiseManager__factory {
    return super.connect(signer) as MetaStocksFranchiseManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaStocksFranchiseManagerInterface {
    return new utils.Interface(_abi) as MetaStocksFranchiseManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaStocksFranchiseManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaStocksFranchiseManager;
  }
}
