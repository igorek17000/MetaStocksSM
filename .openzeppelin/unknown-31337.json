{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6dFE4ed6aC580E6F956200682aCe08A6AdE6Bb85",
    "txHash": "0x77176283d0ec910831e4ae53e55bf4a7a9cdb16d138e6a558601ef032dc48974"
  },
  "proxies": [
    {
      "address": "0x7CE8C2D04644aeDF6bbe1Ff1Fa828838711C962F",
      "txHash": "0x0f6628d350fc233fee6b34411185d31d5935ea26be1d4f36c1fe08e3795494a6",
      "kind": "transparent"
    },
    {
      "address": "0x6dFE4ed6aC580E6F956200682aCe08A6AdE6Bb85",
      "txHash": "0x217a46fd6030d428c45bc597516870230fb1d0086df7d2764171a4cc675c3462",
      "kind": "transparent"
    },
    {
      "address": "0x6496CeD79C999c781C0A72bE91F39394956d8E94",
      "txHash": "0x26788b0ab202f54a53377a5361b0767aafd94dda7e53850184cf266016a34e92",
      "kind": "transparent"
    },
    {
      "address": "0x7D12E02b70CFf6025CA822210a0547F47a918C7b",
      "txHash": "0x96ad5329bd8467ef84ca158a6766139dd001b279c0e7774586926a7527ba3a48",
      "kind": "transparent"
    },
    {
      "address": "0x6AA9e49377fBeAC7295A761C40da04563694Dfc4",
      "txHash": "0x7d940d6033a4da3f3bbdcf2a7e626a65db6d56462ace6f6d4107a1b3b6821dfa",
      "kind": "transparent"
    },
    {
      "address": "0xB997861a190E474BCa7c77dFfd0AB4A3E869c7D8",
      "txHash": "0x9d012b270dee4d0b1eee00deee141a156d29799be052f0b2068e233b5b89e383",
      "kind": "transparent"
    },
    {
      "address": "0x9E10a21449F383Cd79D2E233208BABb56A163CD8",
      "txHash": "0x88a165c7d821f0d4b40c1e0ea4a0bb4dab71dc83494b51c0a9990942365c3a3f",
      "kind": "transparent"
    },
    {
      "address": "0x4a916d406b5BD30aE99f9EbD8DcfDa64B82D6F4F",
      "txHash": "0xd7b93500b0ae1e50c32c5c4c3b645f636822c16b4355cd7116e713530e19fa85",
      "kind": "transparent"
    },
    {
      "address": "0xbc749f199F7D66Ee414ed3214A5b77Ae1c8D2110",
      "txHash": "0x008cbd6bd641271a36e3f9146bad9dbb0cb82fd78483981491f0a9a76ebeecc1",
      "kind": "transparent"
    },
    {
      "address": "0xD946246695A9259F3B33a78629026F61B3Ab40aF",
      "txHash": "0x23b3352e79984b20b8babb4ff7094588e1be66084923caf05214f368993a5fd5",
      "kind": "transparent"
    },
    {
      "address": "0x23DFBc4B8B80C14CC5e25011B8491f268395BAd6",
      "txHash": "0x2d8087b0de8997147f843c26ca664f7c5e24e663fe40ac484ffa28b29462224b",
      "kind": "transparent"
    },
    {
      "address": "0x142458eE914CE315F040CdCE64647e08f482AB29",
      "txHash": "0x30d858ab9dd55d5549cb4f39db2ea169d9c5e16b2c10f51c2ae183c7d15b85d4",
      "kind": "transparent"
    },
    {
      "address": "0xAF194984fa4570B8fE909c102844Bd2584E6E90b",
      "txHash": "0xb7effc746220c659e9963434065f74bae4de1564402f8458442bb47e8e022e9a",
      "kind": "transparent"
    },
    {
      "address": "0x1e5f08CC5cb9350337cEaDafeaAf41016Cb88216",
      "txHash": "0x717c5bbfe30d330bd923c0f51b12e01c2834b8b41e4cbda4fe95bc5e124e2c3e",
      "kind": "transparent"
    },
    {
      "address": "0xe55F53b29d5466302b5562e91847e24D0Be1F7FA",
      "txHash": "0x19e210b61b117ac18d6a7ebbbbf8df1639f8e0bf79abca7b5c9c1afb3e930808",
      "kind": "transparent"
    },
    {
      "address": "0xa82607A62DAFe732FeD80B655C1688ea6BFA9956",
      "txHash": "0x93abdf83b45c8902336b07e7bdd2118949b5a4fc28dfd3e2da7254259baaa792",
      "kind": "transparent"
    },
    {
      "address": "0xD551a700a4c406351B25FD0fF8554dDE365c503D",
      "txHash": "0x7564f39ac87c03d731976b2222386f3ce6a5dac764f007fbcf8dd8af31a6aa59",
      "kind": "transparent"
    },
    {
      "address": "0x5B06224F736a57635B5BCb50B8EF178B189107cB",
      "txHash": "0x058375aeaba1e647201d2a6a7197e171ac1761b5dfc52e37a7b58b573a554d67",
      "kind": "transparent"
    },
    {
      "address": "0x2339Ce63D84e3980bbDf073fD77ce18f5F4A8A66",
      "txHash": "0xacc70e05e025173a414a62cf003be876fb666f3101e4d6115c354cb2a45e56f7",
      "kind": "transparent"
    },
    {
      "address": "0xfB0B49F7981034cC87A9a3eC4d776B5b29D281CD",
      "txHash": "0xa1b3615a6b5db9fe7d11ef6073e439ec2dfc835fc3b35006b2ff0450234cf2aa",
      "kind": "transparent"
    },
    {
      "address": "0xa204f293Ad7b4BFe1115e0e5Df6C04fb209653De",
      "txHash": "0xe1d5be1f8768dfe81ae1f07edd102b3fb46cb7ef74220c016ae574b43cefcc02",
      "kind": "transparent"
    },
    {
      "address": "0x45A32041CE04Bf7057f9163e48dA88F742b9d138",
      "txHash": "0x65d5041201d7a18847053e0a41a10614a708b948a00d5433659afd7c3f912a1a",
      "kind": "transparent"
    },
    {
      "address": "0xf6A86076ce8e9A2ff628CD3a728FcC5876FA70C6",
      "txHash": "0x88903fdbb46c4c70079f76e895883d9063826eac25f1297d873da2cef09b8994",
      "kind": "transparent"
    },
    {
      "address": "0x61fc76C325C99FA6E40E324f456F2F5200aD837A",
      "txHash": "0x41d513533647f9b39ce1b38a69a0d68b7587cb398c414b074aa1532e7c06106a",
      "kind": "transparent"
    },
    {
      "address": "0xe511C8DBE7327565E0768FE08A28B057394B4Bf7",
      "txHash": "0xe2b8af01afdc45ccd5a7e6874ed224e97771321f130ad04df7d63f2db8ab0201",
      "kind": "transparent"
    },
    {
      "address": "0x2CED0795d8248c64cC24d8948fD488787FCDd774",
      "txHash": "0x723afb84a828382e6695ea0d3157024e2cdb5d79dd017640c71bbd11d0aa1a7c",
      "kind": "transparent"
    },
    {
      "address": "0x7AC1546ebd3dcb23708Be971e1dbbbA60fa0Bd1b",
      "txHash": "0xc19752383fe40ee7159a17607448c3ac92cce4d8f986809f6d64dfc2b9dd3ffe",
      "kind": "transparent"
    },
    {
      "address": "0xBc64aa5beb357c73689E6C74C3D7A288e6440F89",
      "txHash": "0x330bde5b295dcc07dc9a21fda6153f12798bb2e155afc4deb2ed6bd89593c0cc",
      "kind": "transparent"
    },
    {
      "address": "0xcd2D641FE63D19B5b877D5990048B5000EeBD759",
      "txHash": "0x69c031911322e3e4670f1d08f94f79478aae7ffe72424c37d12ebdb920109e97",
      "kind": "transparent"
    },
    {
      "address": "0xe047C48AD985b3E7e64711528237197096e64C23",
      "txHash": "0xe82860c9fa001cce5293abc8b688acd2fcd2d6f4cc75b31718017e7989098956",
      "kind": "transparent"
    },
    {
      "address": "0xE7465F779321Cb0e887468A76D0802c2Fc3593DF",
      "txHash": "0x9273ef1c64de363298dbe7d63eff55dc008e86d357cf027941da1f5e9adb529f",
      "kind": "transparent"
    },
    {
      "address": "0x30F72FB75fC0d1a063846197b6BFBdb91321Ed56",
      "txHash": "0x30b5e17c0875965b41fcda86839a7f1529a94c0db7620a2a3da162076bf50937",
      "kind": "transparent"
    },
    {
      "address": "0x8c2FB97670dF1D5c875E3A5211e8c274C0231C5a",
      "txHash": "0xe38d1f779d1e898305b90ecc199c360807e0c049a0c1559718064a2967162ab5",
      "kind": "transparent"
    },
    {
      "address": "0x184d65A521893D0dce5B89f941F53aC0fdb350D1",
      "txHash": "0xf97bfabcac8e737e0902b189a55984c356a781b0fbc9479b7551ef4f71dbdc10",
      "kind": "transparent"
    },
    {
      "address": "0x0c0D8C0c39Ea30e42949e51A5266d0c63672fC93",
      "txHash": "0x294fdc19739c1550807c8106d7d5a91acc76879b7f47e0f59bab94827bc274c4",
      "kind": "transparent"
    },
    {
      "address": "0x70b5359E360f64BF2e90721DC860961F3a6C51C6",
      "txHash": "0x430b69e6134ead26e93cbb3979f9770e3941881a726af44e9fbd945fdc39383c",
      "kind": "transparent"
    },
    {
      "address": "0x2b6c1D318AB1B1eaf575B90742A20606773166DA",
      "txHash": "0xcef56eed599812b34cf13e52b94bc1e95f9f2b84636a227a7d67450519a631c2",
      "kind": "transparent"
    },
    {
      "address": "0xA1F10D62a3d2e429505814151776fD89ba9B23A1",
      "txHash": "0xbe016e5851a48823eb52b77cac332cdf4395cbc4e76bf94cb18069bc98968b0d",
      "kind": "transparent"
    },
    {
      "address": "0xd6697c96e1cB47A3138AaCdF41dD83e956b9EF1F",
      "txHash": "0xe729bb1597155497782624bbca9fc651e8eae99615dc46e1f31bc2a003419736",
      "kind": "transparent"
    },
    {
      "address": "0xe777D31b07aC1c48CBaB1d4ed4d88D74B595Af6F",
      "txHash": "0x23e69516cfaa1b964d4036892ffe19ea80ee5fa5f44e359f79a36369d2a3766a",
      "kind": "transparent"
    },
    {
      "address": "0xbb11EC2217ce03b18Eb82258C9D6FF5bEe7B99F4",
      "txHash": "0x24307a1a58f436e39f505f01b0802a8f314898c16062e0be9f10c4cfbdd5a452",
      "kind": "transparent"
    },
    {
      "address": "0x5f3b150f8Bc894cA54f42ef97F110fb6014670dE",
      "txHash": "0xe3e63f65990f9bd9ba737f8ea8dd8c0fcefc29b5381abbfab70c0f6aff5bf935",
      "kind": "transparent"
    },
    {
      "address": "0xD72429548E0ea291DC535644ce7bb9bDa195cBC6",
      "txHash": "0xd4b2c26e13d68c4d0612185b2c692b786a168300c69cc0f7caa2e7120d15de11",
      "kind": "transparent"
    },
    {
      "address": "0x25E2D15357301815ceDb0B6FDAE1c10613DaFb85",
      "txHash": "0x4083b7de9edeb396f3018554eb1f749db15ab4770594f2c4e32c88a2856c1b3e",
      "kind": "transparent"
    },
    {
      "address": "0x1A0ad34445870730268f3f93FBE1a4e6e2D47A8e",
      "txHash": "0x57690c2a3578e0cca399ded3a6fd0d1c77d9f782b3c4e0c66797345a4419e01d",
      "kind": "transparent"
    },
    {
      "address": "0x0e330080622c13Ef0C223FF6e147Ea206442340D",
      "txHash": "0x54b9daac3268320f97950755f68b7d4f2fec36afe82f3ded377d6ca7a7949c1f",
      "kind": "transparent"
    },
    {
      "address": "0xcf2e856F54AEc0De3aA30a156A59fE77E9E9738D",
      "txHash": "0x318ff51b53dbc82abacc6d908453eea0ae3fcbfdb3e62ae46306256fdeedc5c4",
      "kind": "transparent"
    },
    {
      "address": "0xF253E2ea793923456236EaC0a85426b68f54a1A0",
      "txHash": "0x1d700f0c2b5f66ac6fe299878fbe2857086ec231b66cd3993def5da379b75497",
      "kind": "transparent"
    },
    {
      "address": "0xd1941CC2b6FF253DBcf7C3f726F51c0DEaF2432c",
      "txHash": "0x4f73705affdcfbe671ce1a44844b0dc2e29acd3949518ade34dc37f477820595",
      "kind": "transparent"
    },
    {
      "address": "0xF043F49167a9C10679bCd7A303cE5C28a95b9e69",
      "txHash": "0xf5b1e9abafe0ae49853eb8dd48111262f368a2b79be4c9ca9b79d3b575e62df8",
      "kind": "transparent"
    },
    {
      "address": "0x969422B03674B6ed913fa3205C0424cD7C903Fd0",
      "txHash": "0x59ff9112e9ba32a170e89838ff07ac34e422f27285930a55a37dd1c1c7e35351",
      "kind": "transparent"
    },
    {
      "address": "0xE1221dbbb114100708Bb90Dfde6c95bf0fA447EF",
      "txHash": "0xca664022e3b90ade3cec79862c85445f2b0dfd8bfce96171a305f24cc6a0ba09",
      "kind": "transparent"
    },
    {
      "address": "0x7D509b605Ed678A03f73e769B2D82b2d1CcC29E0",
      "txHash": "0xc4dfa6dbc034f5daf7deac1d438a19d0a5bf36fbf43d2bdb08ade73966b8d133",
      "kind": "transparent"
    },
    {
      "address": "0x23a6F5f2dc0c1dfe79d34cAb51821617e7A3c195",
      "txHash": "0x7978ffe923aeb3a98d668efd12a4162fb9252c09929e2b33d128dbd69fffa634",
      "kind": "transparent"
    },
    {
      "address": "0x724885f48Db42b855B58d3de5176C6846bCA47e9",
      "txHash": "0xe0842df25741dab19f25f6bbe0325b6e0e18eda8513853d5376be3133230c648",
      "kind": "transparent"
    },
    {
      "address": "0x4E2a3D34711e647ae58eB25756511f7beABe98F1",
      "txHash": "0x3c7326600a4b3172b77597bbfd23f6be37c92b718c8cd1cbf9d88793b8051edf",
      "kind": "transparent"
    },
    {
      "address": "0xF097DcCd1a4C33bd53116AE5e8B4b38aB2BE6a52",
      "txHash": "0xf1c8d153c05c8bd41fb7c4124a314a37feb01a62dbf8c2c22235f0d8fd84d836",
      "kind": "transparent"
    },
    {
      "address": "0xCD07336152B6528f211EaBD27e32f2eeb7730F23",
      "txHash": "0x7c57c1e93967bbb83e5471a1177cb51415ce16f19b66d7143e98425915bf0c3a",
      "kind": "transparent"
    },
    {
      "address": "0xF29575684f7B5dD56eE2D759d09288cE1362752c",
      "txHash": "0x1197038d4be4a22c280a718dc92e08812b9b37b1514188d30a0dba760277dd58",
      "kind": "transparent"
    },
    {
      "address": "0xD7b8404127CC3A7Dd78C2cb9F17b91167E5fd933",
      "txHash": "0x24902e4d626d71a83def77a010075d52b51e3d97189ba694efc1ee515b945048",
      "kind": "transparent"
    },
    {
      "address": "0x054AD1ACcfe64741406Cc6ee12006d6bbDBB86A7",
      "txHash": "0xbfa60369b22314fc7b944cbfd3012cf6f728cd764360c9aa26ce93bcb1bfa270",
      "kind": "transparent"
    },
    {
      "address": "0x739188860c3B27B68Df40E5E1A99adE890722fe8",
      "txHash": "0xccbfe7dc6c8f44be66867fd6f54f016a8c5080c4fae79e9f3fbaafe9319da8bf",
      "kind": "transparent"
    },
    {
      "address": "0x063E8290251DcD2A38085D9c5860F785647d23B7",
      "txHash": "0x7535691a448773d951cfa6bc754ecddfe2382c30c512e7132a3c64b4e9720b4a",
      "kind": "transparent"
    },
    {
      "address": "0x862E6C338121dd5e0955E472b3CEa55d81Fab72b",
      "txHash": "0xc953eabfa411cbd863fe18b19cd38702d202483ea5f17c4d8f07ae0be5dc2470",
      "kind": "transparent"
    },
    {
      "address": "0x5bc90Fb2949Be84C2b66fB3E8a131144e3A4cddb",
      "txHash": "0xa142271b04b6c06ee0b6f1fbd146ece6f4bb45c2c54a909d613bee2d9faf94b9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f0f562c44d8ca6ff20a8565bab589dad0204645b94614314fc4a9bc20cd9c961": {
      "address": "0x18e56C4717E2E5fF74a23a8e05e9d4CD5F165e3e",
      "txHash": "0xb28060714e7ff817dbf4c5084054524d25146e127b5ab01de411ff49a15f1670",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)7401",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7043",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocksERC20UpgradeableCore",
            "src": "contracts/MetaStocks/MetaStocksERC20UpgradeableCore.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7043": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)7401": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dfa1c6cb1cd93458fc616c8654b6e0e3da1f7f83f87325517c92ccfb9be44a7f": {
      "address": "0xfB0B49F7981034cC87A9a3eC4d776B5b29D281CD",
      "txHash": "0xe9db90bc910bae5ba6116c4e2530a5017ec593e9ccb77d59d562a9d33f60f295",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8090",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7732",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7732": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8090": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c37bb9e20ffe33bd9729052fe23b840a5f758c322021ed05d6fd22be0716bfab": {
      "address": "0xa204f293Ad7b4BFe1115e0e5Df6C04fb209653De",
      "txHash": "0x21a0b73b5e346b6e5bbc8a265b2c7f7f6b267bca5a63eb91dc1c0a13d7177a9f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8078",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7720",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7720": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8078": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1f0ce125e3a4d4d2c55104d75893b20495ef235b0e695d237eb5a86b1f10cf6": {
      "address": "0xa82607A62DAFe732FeD80B655C1688ea6BFA9956",
      "txHash": "0xec3d032c74ed72fe20c4d9c1b5abf3ca29e32fdb24668bbfae0a34c2f382d582",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8082",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7724",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7724": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8082": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "09fc3f92672bf0d592a5e2c1d6778e8d3fabe670dc2e60b6ea843693a23e9b71": {
      "address": "0x2339Ce63D84e3980bbDf073fD77ce18f5F4A8A66",
      "txHash": "0x693bac50378f14ee9ccbf3be07238f522375473d2d449da7ad2d34166fe28ccb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8074",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7716",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7716": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8074": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "78938db9bb599261f421817d97cd7cb0954dc4e42c37c9a00eb83bbd5c0687c3": {
      "address": "0xA25c35588875078ae6fe300C82b0220Faa5B22cc",
      "txHash": "0xd69d0f70c9e4eb82a135bc87a12ba09dcc5c7f3e3e461a93058c6d3b748a0d40",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8075",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7717",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7717": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8075": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e4948af05b059e722082df51a990740601ae545332e8719bd421675c4d7fd6a3": {
      "address": "0x652eb38Fc74693437a1D508d7a831d811Be34227",
      "txHash": "0xd9fd1024616b968c1c5f1ebb971ff427824326e596a78b2c97307546b264ee3f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8085",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7727",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7727": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8085": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d381fede497fb4b0bf09ac59da1ddd90081a5eefcdb25f6927f1335ef67f16e": {
      "address": "0x86B254F65925C372C3fe8479ec423BF55f9ebE0c",
      "txHash": "0x3f10c37365fd24cf873d379d0cb19b50e0e44aaab3f16431a25bd8f424cbb483",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8088",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)7730",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)7730": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8088": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1506561b027697baa5bd97af7bbb2ea0ebac525e0065c4e489f66a00526f9c0d": {
      "address": "0x01988990c3Eefe18d2dDA8357e77Ce79220F5614",
      "txHash": "0xf51fa8b889618afe5fd866c8c2ce00a69c0619899502895497d2203d2d2b9de5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8700",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:23"
          },
          {
            "label": "dexRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(DexRouterManager)8342",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocks",
            "src": "contracts/MetaStocks.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(DexRouterManager)8342": {
            "label": "contract DexRouterManager",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)8700": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dfd389874f0e91b85e5b11c895b98e4892da0ac4becfe2aff068d949bb5dc9d6": {
      "address": "0x7D12E02b70CFf6025CA822210a0547F47a918C7b",
      "txHash": "0xba2a1673dfd666ef6f295e47fda0e308c8767d145a57c39fda2a85e13404736d",
      "layout": {
        "storage": [
          {
            "label": "ceosCompanies",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaStocksCompanyManager",
            "src": "contracts/managers/MetaStocksManagers/MetaStocksCompanyManager.sol:13"
          },
          {
            "label": "MetaStocksCompany",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMetaStocksCompany)8016",
            "contract": "MetaStocksCompanyManager",
            "src": "contracts/managers/MetaStocksManagers/MetaStocksCompanyManager.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(IMetaStocksCompany)8016": {
            "label": "contract IMetaStocksCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "160fce58cabbe52065a1496082baaca531907779afb9ea9acd92b6750a55d498": {
      "address": "0x6BaFf53CE58982818549C363387401cDab374BF9",
      "txHash": "0xb1d4e009947c8ba1cc4214bf6a2691dba6ff70c81a1679187a2ccc7cb4f4939d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)4270_storage",
            "contract": "MetaStocksCompany",
            "src": "contracts/MetaStocks/MetaStocksCompany.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4270_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "deee1908bc1b763928f8f33989b372fe0340ae01035db522ded565c80ace1047": {
      "address": "0xE499ca0C21df3555206E3E65c5AcBd764534B9Ad",
      "txHash": "0x17f75afc0e4ca8ed49744cdb687d5f81dee5577efe9900dfe6ac2ceff5f447f8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8023",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:23"
          },
          {
            "label": "midasMultinetworkRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(MidasMultinetworkRouterManager)8742",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FeesManager)8023": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_contract(MidasMultinetworkRouterManager)8742": {
            "label": "contract MidasMultinetworkRouterManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "581c87be368bec951240ec8a3f6281ecac40abae60bb71418b478de3debe6551": {
      "address": "0x7CE8C2D04644aeDF6bbe1Ff1Fa828838711C962F",
      "txHash": "0xa03c06361c18aae01fa279b9e521acb96fdf697f7604a3e337a774c1de7c1489",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)4270_storage",
            "contract": "MetaStocksCompany",
            "src": "contracts/MetaStocksCompany.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4270_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "172babcaa20ee06214ebe8aad176ae69f6435acff58a82d9442c7ae2099ffdf3": {
      "address": "0x1090e413B758253bE29C07B933f597100D96DB1c",
      "txHash": "0x8279d8489652103eb8446744952d471efbe21faeb03dc6c555c64aa142133b23",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "MetaStocksCompany",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IMetaStocksCompany)7097",
            "contract": "MetaStocksCompanyManager",
            "src": "contracts/managers/metaStocksManager/MetaStocksCompanyManager.sol:8"
          },
          {
            "label": "maxCompanies",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MetaStocksCompanyManager",
            "src": "contracts/managers/metaStocksManager/MetaStocksCompanyManager.sol:10"
          },
          {
            "label": "ceosCompanies",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaStocksCompanyManager",
            "src": "contracts/managers/metaStocksManager/MetaStocksCompanyManager.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IMetaStocksCompany)7097": {
            "label": "contract IMetaStocksCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f8572137f291d49af14e0bcb35e0d5fd17a1088358ab9e4ace4ba110261cc76f": {
      "address": "0x6496CeD79C999c781C0A72bE91F39394956d8E94",
      "txHash": "0x86817782ba5a5e551b331571982b464f534999e6d8078af80edfafeaec64ea1b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8023",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:23"
          },
          {
            "label": "midasMultinetworkRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(MidasMultinetworkRouterManager)8742",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MidasCoreERC20Upgradeable",
            "src": "contracts/token/MidasCoreERC20Upgradeable.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FeesManager)8023": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_contract(MidasMultinetworkRouterManager)8742": {
            "label": "contract MidasMultinetworkRouterManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4869988d49cde29f188acb6dfe7975c9e33030cfc32574db18788387aea6f999": {
      "address": "0x3d81D3d37B25F17474dB5e7Cb193972f0270C64C",
      "txHash": "0x4b6a01017ccc1e6f10ac1b0b6def66f13468e4e35023cd854d7c193ed84085dc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8688",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:23"
          },
          {
            "label": "midasMultinetworkRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(MidasMultinetworkRouterManager)9407",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FeesManager)8688": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_contract(MidasMultinetworkRouterManager)9407": {
            "label": "contract MidasMultinetworkRouterManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cfef9279cc72a0e5284e9c525b3fb3b0572643612c4f461fdb7f9df6f6d0292": {
      "address": "0x7f0D345d0Bd063462E7ab7629fD8611C3838DEC8",
      "txHash": "0xe4dea9923e82280fb80981e63e821de54900f14e8ffd1dfdf607d344550ebd61",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:15"
          },
          {
            "label": "DEAD_ADDRESS",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:16"
          },
          {
            "label": "lpPair",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:17"
          },
          {
            "label": "swapThreshold",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:18"
          },
          {
            "label": "maxWalletAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:19"
          },
          {
            "label": "maxTransactionAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:20"
          },
          {
            "label": "tradingEnabled",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:21"
          },
          {
            "label": "feesManager",
            "offset": 1,
            "slot": "107",
            "type": "t_contract(FeesManager)8686",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:23"
          },
          {
            "label": "midasMultinetworkRouterManager",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(MidasMultinetworkRouterManager)9405",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:25"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetaStocksToken",
            "src": "contracts/MetaStocksToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FeesManager)8686": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_contract(MidasMultinetworkRouterManager)9405": {
            "label": "contract MidasMultinetworkRouterManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "38dae10f5c2ebb44c2acc12b048c4993b4d32b80097698615817a9b3fc096151": {
      "address": "0x2c887B742418933c3c4B920697D1467C3994828c",
      "txHash": "0x7b79d3ba82c89d9bf66eb6714ebe7f41c0cad474234e6ad3aa9211e389f70164",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "15f3b13bbe9e9757d281ac51fd7b4ec7b0b932cb42a47f4ab914cd4f21ee7d37": {
      "address": "0xdF61D3844D08902B2f1d76C885d6DcD0dC4765FC",
      "txHash": "0x78f64ee11a9a9f3f80f593e47c8a579caa4a98e13d3242f05c87e20b6c80fc47",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "lastClaimDate",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "232aae2f03725835765e1bc52a1a505696db57ec2a93b6d68602cb6c33ef2199": {
      "address": "0xE00751937fD3B29C031d982A32852a42F8bd77d3",
      "txHash": "0x88c63913bd8c8a2ec7dd853b89dae483a25ca5154a2821edc44da0e011f97a78",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "metaStocksFranchise",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IMetaStocksFranchise)7985",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:15"
          },
          {
            "label": "chainlinkDataFeedsManager",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ChainlinkDataFeedsManager)8728",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:16"
          },
          {
            "label": "createFranchisePrice",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:18"
          },
          {
            "label": "maintainceFranchiseExpenses",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:19"
          },
          {
            "label": "franchiseDailyEarnings",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:20"
          },
          {
            "label": "paymentTokenAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:21"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MetaStocksFranchiseManager",
            "src": "contracts/managers/metaStocksManager/MetaStockFranchiseManager.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ChainlinkDataFeedsManager)8728": {
            "label": "contract ChainlinkDataFeedsManager",
            "numberOfBytes": "20"
          },
          "t_contract(IMetaStocksFranchise)7985": {
            "label": "contract IMetaStocksFranchise",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
